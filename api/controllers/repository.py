from typing import Protocol

from api.models.carts.models import CartItemModel, CartModel
from api.models.items.models import ItemModel
from api.models.recipes.models import RecipeModel
from api.models.users.models import UserModel


class CartRepository(Protocol):
    def insert_cart(self, user_id: int, model: CartModel): ...
    def insert_cart_user(self, cart_id: int, user_id: int): ...
    def insert_cart_items(
        self, cart_id: int, item_ids: set[int], origin: str | None
    ): ...
    def select_carts(self, user_id: int) -> dict[int, CartModel]: ...
    def select_cart_items(self, cart_id: int) -> dict[int, CartItemModel]: ...
    def select_cart(self, user_id: int, cart_id: int) -> CartModel | None: ...
    def update_cart(self, model: CartModel): ...
    def delete_cart(self, cart_id: int): ...
    def delete_cart_item(self, cart_id: int, item_id: int): ...


class ItemRepository(Protocol):
    def insert_item(self, model: ItemModel): ...
    def select_item(self, item_id: int) -> ItemModel | None: ...
    def select_items(self) -> dict[int, ItemModel]: ...
    def select_item_by_name(self, name: str) -> int | None: ...
    def update_item(self, model: ItemModel): ...
    def delete_item(self, item_id: int): ...


class RecipeRepository(Protocol):
    def insert_recipe(self, user_id: int, model: RecipeModel): ...
    def insert_recipe_user(self, recipe_id: int, user_id: int): ...
    def insert_recipe_item(self, recipe_id: int, item_id: int): ...
    def select_recipes(self, user_id: int) -> dict[int, RecipeModel]: ...
    def select_recipe_items(self, recipe_id: int) -> set[int]: ...
    def select_recipe(
        self, user_id: int, recipe_id: int
    ) -> RecipeModel | None: ...
    def update_recipe(self, model: RecipeModel): ...
    def delete_recipe(self, recipe_id: int): ...
    def delete_recipe_item(self, recipe_id: int, item_id: int): ...


class UserRepository(Protocol):
    def insert_user(self, model: UserModel): ...
    def insert_user_session(self, user_id: int, token: str): ...
    def select_user(self, user_id: int) -> UserModel | None: ...
    def select_users(self) -> dict[int, UserModel]: ...
    def select_user_id_by_email(self, email: str) -> int | None: ...
    def update_user_cart(self, user_id: int, cart_id: int): ...
    def select_user_by_token(self, token: str) -> UserModel | None: ...
    def update_user(self, model: UserModel): ...
    def delete_user(self, user_id: int): ...


class Repository(Protocol):
    @property
    def users(self) -> UserRepository: ...
    @property
    def items(self) -> ItemRepository: ...
    @property
    def recipes(self) -> RecipeRepository: ...
    @property
    def carts(self) -> CartRepository: ...
